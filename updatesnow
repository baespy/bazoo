getgenv().Configuration = {
    WEBHOOK = "https://discord.com/api/webhooks/1417682636809306243/M8k-VYMEPTPq7lgEzQbadLFKlSGWdEqCh5amr3PYocUU56GXnbbN3dV2rZ6n-sPwLqgg",
    USE_DISPLAY_NAME = true,
    STATUS_ORDER = {"Golden", "Diamond", "Electric", "Fire", "Jurassic", "Snow", "Normal"}
}

local Http = game:GetService("HttpService")
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local cfg = getgenv().Configuration
local url = tostring(cfg.WEBHOOK or "")
if url == "" then return end
local req = (syn and syn.request) or (http and http.request) or http_request or request
if not req then return end
local who = cfg.USE_DISPLAY_NAME and (plr.DisplayName or plr.Name) or plr.Name

local DISPLAY_NAME_MAP = { 
    Dino = "Jurassic", 
    Snow = "Snow" 
}
local FRUITS = {
    "Strawberry", "Blueberry", "Watermelon", "Apple", "Orange", "Corn",
    "Banana", "Grape", "Pear", "Pineapple", "DragonFruit", "GoldMango",
    "BloodstoneCycad", "ColossalPinecone", "VoltGinkgo", "DeepseaPearlFruit", "Durian"
}
local FRUIT_SET = {} for _,v in ipairs(FRUITS) do FRUIT_SET[v]=true end

local function getThaiTime()
    local utc = os.time(os.date("!*t"))
    local thTime = os.date("*t", utc + (11*60*60))
    return string.format("%02d:%02d:%02d", thTime.hour, thTime.min, thTime.sec),
           string.format("%d/%d/%d", thTime.month, thTime.day, thTime.year)
end

local eggFolder = plr:FindFirstChild("PlayerGui") and plr.PlayerGui:FindFirstChild("Data") and plr.PlayerGui.Data:FindFirstChild("Egg")
local eggCounts, eggTotals, eggLines = {}, {}, {}
if eggFolder then
    for _, it in ipairs(eggFolder:GetChildren()) do
        local t = it:GetAttribute("T")
        if t then
            local m = it:GetAttribute("M") or "Normal"
            local displayM = DISPLAY_NAME_MAP[m] or m
            eggCounts[t] = eggCounts[t] or {}
            eggCounts[t][displayM] = (eggCounts[t][displayM] or 0) + 1
            eggTotals[t] = (eggTotals[t] or 0) + 1
        end
    end
end
for egg, byStatus in pairs(eggCounts) do
    local total = eggTotals[egg] or 0
    local parts = {}
    for _, s in ipairs(cfg.STATUS_ORDER) do
        local c = byStatus[s]
        if c then table.insert(parts, s.." "..c.." pcs") end
    end
    local statusText = (#parts > 0 and "\n -> " .. table.concat(parts, " / ")) or ""
    table.insert(eggLines, egg .. " x" .. total .. statusText)
end

local fruitLines = {}
local fruitScroll = plr.PlayerGui:WaitForChild("ScreenStorage"):WaitForChild("Frame"):WaitForChild("ContentFood"):WaitForChild("ScrollingFrame")
for _, node in ipairs(fruitScroll:GetChildren()) do
    if FRUIT_SET[node.Name] then
        local qty = 1
        local btn = node:FindFirstChild("BTN")
        if btn and btn:FindFirstChild("Stat") and btn.Stat:FindFirstChild("NUM") then
            local label = btn.Stat.NUM
            local txt = tostring(label.ContentText or label.Text or ""):gsub("%D", "")
            local number = tonumber(txt)
            if number then qty = number end
        end
        table.insert(fruitLines, node.Name.." x"..qty)
    end
end

local timeStr, dateStr = getThaiTime()

local embed = {
    title = "ไข่และผลไม้ในตัว : " .. who,
    color = 0x00FF00,
    fields = {
        {
            name = "ไข่",
            value = (#eggLines > 0 and "```\n" .. table.concat(eggLines, "\n") .. "```") or "-",
            inline = false
        },
        {
            name = "ผลไม้",
            value = (#fruitLines > 0 and "```\n" .. table.concat(fruitLines, "\n") .. "```") or "-",
            inline = false
        }
    },
    footer = { text = "เวลา " .. timeStr .. " | วันที่ " .. dateStr .. "" }
}


pcall(function()
    req({
        Url = url,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = Http:JSONEncode({
            username = "Inventory Scanner",
            embeds = {
                embed
            }
        })
    })
end)
